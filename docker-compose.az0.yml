version: '3.4'


x-healthcheck: &healthcheck
  test: [ "CMD", "curl", "-sf", "http://localhost:8545" ]
  interval: 5s
  timeout: 5s
  retries: 3
  start_period: 30s

services:
  deployer:
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: deployer
    image: ethereumbitnetwork/deployer:${DOCKER_TAG_DEPLOYER:-latest}
    entrypoint: ./deployer.sh
    restart: on-failure
    environment:
      # Env vars for the deployment script.
      CONTRACTS_RPC_URL: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      CONTRACTS_TARGET_NETWORK: 'goerli-qa'
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8080}:8081
    healthcheck:
      <<: *healthcheck
      test: [ "CMD", "curl", "-sf", "http://localhost:8081" ]


  l2geth:
    depends_on:
      - deployer
      - dtl
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./haenvs/az0/geth.env
    restart: on-failure
    volumes:
      - ./data/l2geth:/root/.ethereum/geth/
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      ROLLUP_TIMESTAMP_REFRESH: 5s
      ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
      # connecting to the DTL
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      # no need to keep this secret, only used internally to sign blocks
      BLOCK_SIGNER_KEY: '6587ae678cf4fc9a33000cdbf9f35226b71dcc6a4684a31203241f9bcfd55d27'
      BLOCK_SIGNER_ADDRESS: '0x00000398232E2064F896018496b4b44b3D62751F'

      ROLLUP_ENFORCE_FEES: ${ROLLUP_ENFORCE_FEES:-true}
      ROLLUP_FEE_THRESHOLD_DOWN: 0.9
      ROLLUP_FEE_THRESHOLD_UP: 1.1
    ports:
      - ${L2GETH_HTTP_PORT:-8545}:8545
      - ${L2GETH_WS_PORT:-8546}:8546
    healthcheck: *healthcheck


  dtl:
    depends_on:
      - deployer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: data-transport-layer
    image: ethereumbitnetwork/data-transport-layer:${DOCKER_TAG_DATA_TRANSPORT_LAYER:-latest}
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      - ./haenvs/az0/dtl.env
    restart: on-failure
    # set the rest of the env vars for the network which do not
    # depend on the docker-compose setup
    environment:
      # used for setting the address manager address
      URL: http://deployer:8081/addresses.json
      # connect to the 2 layers
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
      DATA_TRANSPORT_LAYER__SYNC_FROM_L1: 'true'
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 1705003
    ports:
      - ${DTL_PORT:-7878}:7878


  gas_oracle:
    build:
      context: ..
      dockerfile: ./gas-oracle/Dockerfile
    image: ethereumbitnetwork/gas-oracle:${DOCKER_TAG_GAS_ORACLE:-latest}
    restart: on-failure
    environment:
      GAS_PRICE_ORACLE_ETHEREUM_HTTP_URL: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      GAS_PRICE_ORACLE_LAYER_TWO_HTTP_URL: http://l2geth:8545
      # Default hardhat account 5
      GAS_PRICE_ORACLE_PRIVATE_KEY: '0x176c19817fd36281d97f8b10c5debb45a24af3200aada2ad6e6c681ebf0f093e'
      GAS_PRICE_ORACLE_ENABLE_L2_GAS_PRICE: 'true'
      GAS_PRICE_ORACLE_ENABLE_L1_BASE_FEE: 'true'

  verifier:
    depends_on:
      - deployer
      - dtl
      - l2geth
    # deploy:
    #   replicas: 1
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    restart: on-failure
    env_file:
      - ./haenvs/az0/geth.env
    volumes:
      - ./data/verifier:/root/.ethereum/geth/
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ROLLUP_BACKEND: 'l1'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-8547}:8545
      - ${VERIFIER_WS_PORT:-8548}:8546

  replica:
    depends_on:
      - dtl
      - l2geth
    # deploy:
    #   replicas: 1
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    env_file:
      - ./haenvs/az0/geth.env
    restart: on-failure
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ROLLUP_BACKEND: 'l2'
      ROLLUP_VERIFIER_ENABLE: 'true'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
    ports:
      - ${REPLICA_HTTP_PORT:-8549}:8545
      - ${REPLICA_WS_PORT:-8550}:8546


  fault_detector:
    depends_on:
      - l2geth
    deploy:
      replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: fault-detector
    image: ethereumbitnetwork/fault-detector:${DOCKER_TAG_FAULT_DETECTOR:-latest}
    restart: on-failure
    entrypoint: ./detector.sh
    environment:
      #It seems that if we use alchemy, it will meet error.
      FAULT_DETECTOR__L1_RPC_PROVIDER: https://rpc.ankr.com/eth_goerli
      FAULT_DETECTOR__L2_RPC_PROVIDER: http://l2geth:8545
      FAULT_DETECTOR__START_BATCH_INDEX: 0
      RETRIES: 60

  replica_healthcheck:
    depends_on:
      - l2geth
      - replica
    deploy:
      replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: replica-healthcheck
    image: ethereumbitnetwork/replica-healthcheck:${DOCKER_TAG_REPLICA_HEALTHCHECK:-latest}
    restart: on-failure
    environment:
      HEALTHCHECK__REFERENCE_RPC_PROVIDER: http://l2geth:8545
      HEALTHCHECK__TARGET_RPC_PROVIDER: http://replica:8545
    ports:
      - ${HEALTHCHECK_HTTP_PORT:-7300}:7300

  l2geth2:
    depends_on:
      - deployer
      - dtl
      - l2geth
    # deploy:
    #   replicas: 1
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    restart: on-failure
    env_file:
      - ./haenvs/az1/rpc0/geth_rpc.env
    volumes:
      - ./data/l2geth2:/root/.ethereum/geth/
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl2:7878
      ROLLUP_BACKEND: 'l2'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-10547}:8545
      - ${VERIFIER_WS_PORT:-10548}:8546



  dtl2:
    depends_on:
      - deployer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: data-transport-layer
    image: ethereumbitnetwork/data-transport-layer:${DOCKER_TAG_DATA_TRANSPORT_LAYER:-latest}
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      - ./haenvs/az1/rpc0/dtl.env
    restart: on-failure
    # set the rest of the env vars for the network which do not
    # depend on the docker-compose setup
    environment:
      # used for setting the address manager address
      URL: http://deployer:8081/addresses.json
      # connect to the 2 layers
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 1705003
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
      DATA_TRANSPORT_LAYER__SYNC_FROM_L1: 'false'
    ports:
      - ${DTL_PORT:-8878}:7878

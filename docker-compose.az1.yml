version: '3.4'


x-healthcheck: &healthcheck
  test: [ "CMD", "curl", "-sf", "http://localhost:8545" ]
  interval: 5s
  timeout: 5s
  retries: 3
  start_period: 30s


services:
  deployer2:
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: deployer
    image: ethereumbitnetwork/deployer:${DOCKER_TAG_DEPLOYER:-latest}
    entrypoint: ./deployer.sh
    restart: on-failure
    environment:
      # Env vars for the deployment script.
      CONTRACTS_RPC_URL: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      CONTRACTS_TARGET_NETWORK: 'goerli-qa'
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8082}:8081
    healthcheck:
      <<: *healthcheck
      test: [ "CMD", "curl", "-sf", "http://localhost:8082" ]

  l2geth_slave:
    depends_on:
      - deployer
      - dtl
      - l2geth
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    restart: on-failure
    env_file:
      - ./haenvs/az1/rpc1/geth_rpc.env
    volumes:
      - ./data/l2geth_slave:/root/.ethereum/geth/
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer2:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ROLLUP_BACKEND: 'l2'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-12547}:8545
      - ${VERIFIER_WS_PORT:-12548}:8546


  gas_oracle_2:
    build:
      context: ..
      dockerfile: ./gas-oracle/Dockerfile
    image: ethereumbitnetwork/gas-oracle:${DOCKER_TAG_GAS_ORACLE:-latest}
    restart: on-failure
    environment:
      GAS_PRICE_ORACLE_ETHEREUM_HTTP_URL: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      GAS_PRICE_ORACLE_LAYER_TWO_HTTP_URL: http://l2geth:8545
      # Default hardhat account 5
      GAS_PRICE_ORACLE_PRIVATE_KEY: '0x176c19817fd36281d97f8b10c5debb45a24af3200aada2ad6e6c681ebf0f093e'
      GAS_PRICE_ORACLE_ENABLE_L2_GAS_PRICE: 'true'
      GAS_PRICE_ORACLE_ENABLE_L1_BASE_FEE: 'true'

  verifier2:
    depends_on:
      - deployer2
      - dtl
      - l2geth
    # deploy:
    #   replicas: 1
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    env_file:
      - ./haenvs/az1/geth_backup.env
    restart: on-failure
    volumes:
      - ./data/verifier2:/root/.ethereum/geth/
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer2:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ROLLUP_BACKEND: 'l1'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-9547}:8545
      - ${VERIFIER_WS_PORT:-9548}:8546

  replica2:
    depends_on:
      - dtl
      - l2geth
    # deploy:
    #   replicas: 1
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    env_file:
      - ./haenvs/az1/geth_backup.env
    restart: on-failure
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer2:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ROLLUP_BACKEND: 'l2'
      ROLLUP_VERIFIER_ENABLE: 'true'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
    ports:
      - ${REPLICA_HTTP_PORT:-9549}:8545
      - ${REPLICA_WS_PORT:-9550}:8546


  fault_detector2:
    depends_on:
      - l2geth
    deploy:
      replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: fault-detector
    image: ethereumbitnetwork/fault-detector:${DOCKER_TAG_FAULT_DETECTOR:-latest}
    restart: on-failure
    entrypoint: ./detector.sh
    environment:
      #It seems that if we use alchemy, it will meet error.
      FAULT_DETECTOR__L1_RPC_PROVIDER: https://rpc.ankr.com/eth_goerli
      FAULT_DETECTOR__L2_RPC_PROVIDER: http://l2geth:8545
      FAULT_DETECTOR__START_BATCH_INDEX: 0
      RETRIES: 60


  replica_healthcheck2:
    depends_on:
      - l2geth
      - replica2
    deploy:
      replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: replica-healthcheck
    image: ethereumbitnetwork/replica-healthcheck:${DOCKER_TAG_REPLICA_HEALTHCHECK:-latest}
    restart: on-failure
    environment:
      HEALTHCHECK__REFERENCE_RPC_PROVIDER: http://l2geth:8545
      HEALTHCHECK__TARGET_RPC_PROVIDER: http://replica2:8545
    ports:
      - ${HEALTHCHECK_HTTP_PORT:-7301}:7300

  l2geth3:
    depends_on:
      - deployer
      - dtl
      - l2geth
    # deploy:
    #   replicas: 1
    build:
      context: ..
      dockerfile: ./l2geth/Dockerfile
    image: ethereumbitnetwork/l2geth:${DOCKER_TAG_L2GETH:-latest}
    entrypoint: sh ./geth.sh
    restart: on-failure
    env_file:
      - ./haenvs/az1/rpc1/geth_rpc.env
    volumes:
      - ./data/l2geth3:/root/.ethereum/geth/
    environment:
      ETH1_HTTP: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer2:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl2:7878
      ROLLUP_BACKEND: 'l2'
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-11547}:8545
      - ${VERIFIER_WS_PORT:-11548}:8546



  dtl3:
    depends_on:
      - deployer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: data-transport-layer
    image: ethereumbitnetwork/data-transport-layer:${DOCKER_TAG_DATA_TRANSPORT_LAYER:-latest}
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      - ./haenvs/az1/rpc1/dtl.env
    restart: on-failure
    # set the rest of the env vars for the network which do not
    # depend on the docker-compose setup
    environment:
      # used for setting the address manager address
      URL: http://deployer2:8081/addresses.json
      # connect to the 2 layers
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: https://eth-goerli.g.alchemy.com/v2/821_LFssCCQnEG3mHnP7tSrc87IQKsUp
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 1705003
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
      DATA_TRANSPORT_LAYER__SYNC_FROM_L1: 'false'
    ports:
      - ${DTL_PORT:-9878}:7878
